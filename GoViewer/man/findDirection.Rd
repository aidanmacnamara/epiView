% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/findDirection.r
\name{findDirection}
\alias{findDirection}
\title{estimates a n-dimensional direction from  at least n-1 views}
\usage{
findDirection(w, p = 1, scale1 = F, trace = F, warn = T)
}
\arguments{
\item{w}{a data frame of columns each corresponding to observed views. Non-observed coordinates should be coded as NA}

\item{p}{a penality parameter for the length of the vector returned by the optimisation. This is an internal parameter,
and the output is forced normalised if scale1 is not selected}

\item{scale1}{If true, the output is rescaled so the the first component is one. This is useful for testing and demonstration
purposes}

\item{trace}{if true, the number of iterations is also returned}

\item{warn}{if true (default), the code checks to see if enougth columns are specified to triangulate a vector of the correction
dimensionality. No checks are however made for redunancy (linear dependence etc.)}
}
\value{
a vector of length nrow(w)
}
\description{
Estimates the direction in a PCA subspace from looking at k-1 or more axis combinations. Used to triangulate
a direction corresponding to a given set of differences through multiple 2D PCA views.
}
\details{
Note that to ensure that the problem is uniquely defined we also constrain the normalisation to give a L2-norm of 1.
This is ensured via the regularisation parameter p. This optimisation task is however trivial. As soon as the direction
is found, the optimisation is simply a quadratic along a radius.
}
\examples{
w=makeW(1:5)
findDirection(w,scale1=T,trace=T)
findDirection(w[,1:5],scale1=T,trace=T)
findDirection(w[,1:4],scale1=T,trace=T)
findDirection(w[,1:3],scale1=T,trace=T)
findDirection(w[,1:3],scale1=T,trace=T,warn=F)
}
